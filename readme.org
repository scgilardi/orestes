* Orestes

I need to implement a Forth so I can write firmware for my keyboard so
I can write actual code.

** matrix
   - layer x row x column
   - a row is a 16 bit value; each column is a bit
   - a layer is just four rows

** setup
   - set all rows output low
   - set all columns to input with pull-ups
   - set matrix state to zero
   - set layer to zero

** scan
   - for each row
     - delay
     - read columns for the current row
     - check to see if this row has changed since the last read
       - if so, set debounce for this row to cols; reset debounce counter
     - if debounce counter
       - decrement debounce counter
       - if decremented to zero
         - set the current matrix row to the last read value

** steps
   - ☑ .s
   - ☑ push a number onto the stack
   - ☑ call a primitive
   - ☑ call a primitive with an arg
   - ☑ easy way to load primitives into the dictionary
   - ☑ store and fetch
   - ☑ define a constant
   - ☑ define a variable
   - ☑ define a word
   - ☑ conditions
   - ☑ null-terminated strings
   - ☑ read programs from stdin
   - ☐ nested if
   - ☐ loops
   - ☐ run on the board
   - ☐ LED button
   - ☐ IO over serial?
   - ☐ else
   - ☐ store and fetch single bytes
   - ☐ comments
   - ☐ send hard-coded USB key codes
   - ☐ send key codes by column
   - ☐ full matrix
   - ☐ debounced matrix
   - ☐ layered matrix

** missing primitives
   - ☐ swap
   - ☐ over
   - ☐ if
   - ☐ exit
   - ☐ comma
   - ☐ lit
   - ☐ +
   - ☐ =
   - ☐ abort
